
#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordred_set;
typedef long long ll;
#define pb push_back
#define ca "YES\n"
#define wa "NO\n"

void takeinput(vector<ll> &v, ll n)
{
  for (ll i = 0; i < n; i++)
  {
    cin >> v[i];
  }
}

void solve()
{
  ll n;
  cin >> n;
  vector<ll> ans(n, 0), v(n), tmp(n, 0);
  vector<ll> psum(n, 0);

  for (ll i = 0; i < n; i++)
  {
    cin >> v[i];

    tmp[i] = v[i];
  }

  sort(v.begin(), v.end());
  if (n == 2)
  {
    if (tmp[0] == tmp[1])
    {
      cout << "1 1" << endl;
    }
    else
    {
      if (tmp[0] > tmp[1])
      {
        cout << "1 0" << endl;
      }
      else
      {
        cout << "0 1" << endl;
      }
    }
    return;
  }
  psum[0] = v[0];
  for (ll i = 1; i < n; i++)
  {
    psum[i] = psum[i - 1] + v[i];
  }
  vector<bool> isvalid(n, false);
  bool special = false;
  for (ll i = 1; i < n; i++)
  {
    if (psum[i - 1] >= v[i])
    {
      isvalid[i] = true;
    }
  }

  vector<ll> firstf(n, -1);
  if (isvalid[n - 1])
  {
    firstf[n - 1] = n;
  }
  else
  {
    firstf[n - 1] = n - 1;
  }
  for (ll i = n - 2; i >= 0; i--)
  {
    if (isvalid[i] == false)
    {
      firstf[i] = i;
    }
    else
    {
      firstf[i] = firstf[i + 1];
    }
  }

  unordered_map<ll, ll> mp;
  mp[v[n - 1]] = n - 1;

  mp[v[0]] = 0;
  for (ll i = 1; i < n - 1; i++)
  {
    ll cnt = 0;
    cnt = i;
    ll nextf = firstf[i + 1];
    cnt += nextf - i - 1;

    cnt = max(cnt, mp[v[i]]);

    mp[v[i]] = cnt;
  }

  for (ll i = 0; i < n; i++)
  {
    cout << mp[tmp[i]] << " ";
  }
  cout << endl;
}

int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif

  ll t;
  cin >> t;
  while (t--)
    solve();

  return 0;
}
